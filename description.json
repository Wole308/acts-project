{
    "name": "Vadd Simple (RTL Kernel)", 
    "description": [
        "This is a simple example of vector addition using RTL kernel and supports all flows including sw_emu using C-Model."
    ], 
    "flow": "vitis",
    "keywords": [
        "kernel_files"
    ],
    "key_concepts": [
        "RTL Kernel",
        "RTL C-Model"
    ],
    "platform_blacklist": [
        "nodma"
    ], 
    "os": [
        "Linux"
    ], 
    "runtime": [
        "OpenCL"
    ], 
    "gui": false, 
    "host": {
        "host_exe": "rtl_vadd",
        "compiler": {
            "sources": [
                "REPO_DIR/common/includes/xcl2/xcl2.cpp", 
                "src/host.cpp"
            ], 
            "includepaths": [
                "REPO_DIR/common/includes/xcl2"
            ]
        }
    }, 
    "containers": [
        {
            "accelerators": [
                {
                    "kernel_type": "RTL", 
                    "name": "vadd"
                }
            ], 
            "name": "vadd"
        }
    ], 
    "launch": [
        {
            "cmd_args": "BUILD/vadd.xclbin", 
            "name": "generic launch for all flows"
        }
    ], 
    "config_make": "config.mk", 
    "output_files": [
        "tmp_kernel_pack*",
        "packaged_kernel*"
    ],
    "contributors": [
        {
            "url": "http://www.xilinx.com", 
            "group": "Xilinx"
        }
    ], 
    "revision": [
        {
            "date": "JAN2017", 
            "version": "1.0", 
            "description": "Initial Xilinx Release"
        }
    ],
    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": 32768,
                "max_time_min": 300
            }
        ],
        "targets": [
            "vitis_sw_emu",
            "vitis_hw_emu",
            "vitis_hw"
        ],
        "category": "canary"
    } 
}
